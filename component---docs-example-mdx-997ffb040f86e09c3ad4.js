(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{zDoZ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return h})),n.d(t,"default",(function(){return O}));var a=n("Fcif"),o=n("+I+c"),c=n("mXGw"),s=n("/FXl"),i=n("TjRS"),r=n("ZFoC"),l=n("bGYK"),b=n("bzer"),p=n("Cg8y"),m=n("sNn3"),d=(n("aD51"),["components"]),h={};void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/example.mdx"}});var u={_frontmatter:h},f=i.a;function O(e){var t,n=e.components,O=Object(o.a)(e,d);return Object(s.b)(f,Object(a.a)({},u,O,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"example"},"Example"),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"You can find the full code of the components in the example below at ",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/tree/main/docs/example"},"docs/example"),".")),Object(s.b)("p",null,"This is an interactive example user interface for creating multi-send transactions."),Object(s.b)(r.c,{__position:0,__code:'() => {\n  const [batch, setBatch] = React.useState([\n    createTransaction(TransactionType.transferFunds, nanoid()),\n  ])\n  return (\n    <ProvideMultiSendContext\n      safeAddress="0x1076f084A3703E1701a1a97F837906e56370D4f9"\n      network="4"\n    >\n      <TransactionBatch\n        value={batch}\n        onChange={setBatch}\n        classNames={classNames}\n      />\n    </ProvideMultiSendContext>\n  )\n}',__scope:(t={props:O,DefaultLayout:i.a,Playground:r.c,Props:r.d,nanoid:l.a,ProvideMultiSendContext:b.a,createTransaction:b.c,TransactionType:b.b,TransactionBatch:p.a,classNames:m},t.DefaultLayout=i.a,t._frontmatter=h,t),mdxType:"Playground"},(function(){var e=c.useState([Object(b.c)(b.b.transferFunds,Object(l.a)())]),t=e[0],n=e[1];return Object(s.b)(b.a,{safeAddress:"0x1076f084A3703E1701a1a97F837906e56370D4f9",network:"4",mdxType:"ProvideMultiSendContext"},Object(s.b)(p.a,{value:t,onChange:n,classNames:m,mdxType:"TransactionBatch"}))})),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"To try the example with your own Safe, simply change the values of the ",Object(s.b)("inlineCode",{parentName:"p"},"safeAddress")," and ",Object(s.b)("inlineCode",{parentName:"p"},"network")," props in the code playground above.")),Object(s.b)("p",null,"This example uses ",Object(s.b)("a",{parentName:"p",href:"https://dndkit.com"},"dnd-kit")," for drag & drop transaction reordering.\nThe component styles can be customized using css modules. The example theme can be found at ",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/plain.module.css"},"docs/example/plain.module.css"),"."),Object(s.b)("p",null,"For understanding the different moving parts, in the following sections we're going to break the example down into its individual components, going top-down."),Object(s.b)("h2",{id:"transactionbatch"},Object(s.b)("inlineCode",{parentName:"h2"},"<TransactionBatch>")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},Object(s.b)("strong",{parentName:"p"},"Code:")," ",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/TransactionBatch.tsx"},"docs/example/TransactionBatch.tsx"))),Object(s.b)("p",null,"Renders the list of ",Object(s.b)("inlineCode",{parentName:"p"},"<Transaction>")," elements, handles adding, removing, and updating transactions.\nAlso implements the reordering of list items using the ",Object(s.b)("a",{parentName:"p",href:"https://docs.dndkit.com/presets/sortable"},"Sortable preset of dnd-kit"),"."),Object(s.b)("h2",{id:"transaction"},Object(s.b)("inlineCode",{parentName:"h2"},"<Transaction>")),Object(s.b)("p",null,"Represents a single transaction item in the batch.\nEach item has a fixed header, with a drag handle element, a title, and a remove button.\nClicking the title allows collapsing the transaction."),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"<TransactionTypeSelect>")," element allows switching between the ",Object(s.b)("a",{parentName:"p",href:"/react-multisend/usage#transactionType"},"different transaction types"),".\nWhen switching the transaction type, under the hood it will replace the entire transaction item with a fresh one created using ",Object(s.b)("a",{parentName:"p",href:"/react-multisend/api#createTransaction"},Object(s.b)("inlineCode",{parentName:"a"},"createTransaction")),"."),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"<TransactionBody>")," component's sole responsibility is rendering the right specific component for the respective transaction type: ",Object(s.b)("inlineCode",{parentName:"p"},"<TransferFunds>"),", ",Object(s.b)("inlineCode",{parentName:"p"},"<TransferCollectible>"),", ",Object(s.b)("inlineCode",{parentName:"p"},"<CallContract>"),", or ",Object(s.b)("inlineCode",{parentName:"p"},"<RawTransaction>"),"."),Object(s.b)("h2",{id:"transferfunds"},Object(s.b)("inlineCode",{parentName:"h2"},"<TransferFunds>")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},Object(s.b)("strong",{parentName:"p"},"Code:")," ",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/TransferFunds.tsx"},"docs/example/TransferFunds.tsx"))),Object(s.b)("p",null,"The component renders an ",Object(s.b)("inlineCode",{parentName:"p"},"<AssetSelect>")," (",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/AssetSelect.tsx"},"code"),") input, which lists all ERC20 tokens that the Safe holds a balance of.\nThis information is provided by the ",Object(s.b)("a",{parentName:"p",href:"/react-multisend/usage#usesafebalances-hook"},Object(s.b)("inlineCode",{parentName:"a"},"useSafeBalances")," hook"),"."),Object(s.b)("p",null,"The same hook also powers the ",Object(s.b)("inlineCode",{parentName:"p"},"<AmountInput>")," (",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/AmountInput.tsx"},"code"),") component. Here the Safe's balance of the selected token is used to control the maximum amount the user will be able to enter."),Object(s.b)("h2",{id:"transfercollectible"},Object(s.b)("inlineCode",{parentName:"h2"},"<TransferCollectible>")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},Object(s.b)("strong",{parentName:"p"},'Code"')," ",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/TransferCollectible.tsx"},"docs/example/TransferCollectible.tsx"))),Object(s.b)("p",null,"The most notable component here is ",Object(s.b)("inlineCode",{parentName:"p"},"<CollectibleSelect>")," (",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/CollectibleSelect.tsx"},"code"),") which uses the ",Object(s.b)("a",{parentName:"p",href:"/react-multisend/usage#usesafebalances-hook"},Object(s.b)("inlineCode",{parentName:"a"},"useSafeCollectibles")," hook")," to render a select input with all collectibles held in the Safe.\nCollectibles are grouped by their token contracts."),Object(s.b)("h2",{id:"callcontract"},Object(s.b)("inlineCode",{parentName:"h2"},"<CallContract>")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},Object(s.b)("strong",{parentName:"p"},"Code:")," ",Object(s.b)("a",{parentName:"p",href:"https://github.com/gnosis/react-multisend/blob/main/docs/example/CallContract.tsx"},"docs/example/CallContract.tsx"))),Object(s.b)("p",null,"This component is powered by the ",Object(s.b)("inlineCode",{parentName:"p"},"useContractCall")," hook, which provides the contract interface information necessary for rendering input elements for all parameters of the selected contract function."))}void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/example.mdx"}}),O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-example-mdx-997ffb040f86e09c3ad4.js.map