{"version":3,"sources":["webpack:///../docs/api.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oRAQaA,EAAe,Q,8LAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,OADR,OAGA,kBACE,GAAM,mBADR,mBAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eADZ,4IAQL,kBACE,GAAM,uBADR,uBAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,oJAQL,kBACE,GAAM,mBADR,mBAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,uOASL,kBACE,GAAM,2BADR,2BAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,+PAYL,kBACE,GAAM,uBADR,uBAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,sEAIL,kBACE,GAAM,qBADR,qBAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,8EAIL,kBACE,GAAM,WADR,WAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,2DAIL,6IAA4H,0BAAYA,WAAW,KAAvB,MAA5H,aACA,kBACE,GAAM,gBADR,gBAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,wEAIL,kBACE,GAAM,eADR,eAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,2E,4LAQTJ,EAAWK,gBAAiB","file":"component---docs-api-mdx-a95bb929d46cfc37faba.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-multisend/react-multisend/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <h2 {...{\n      \"id\": \"usesafebalances\"\n    }}>{`useSafeBalances`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const [balances, { loading, error, fetch }] = useSafeBalances(props: {\n  address: string\n  network: NetworkId\n  lazy?: boolean\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usesafecollectibles\"\n    }}>{`useSafeCollectibles`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const [collectibles, { loading, error, fetch }] = useSafeCollectibles(props: {\n  address: string\n  network: NetworkId\n  lazy?: boolean\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usecontractcall\"\n    }}>{`useContractCall`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const { functions, payable, inputs, loading } = useContractCall(props: {\n  value: CallContractTransactionInput\n  onChange(value: CallContractTransactionInput): void\n  network: NetworkId\n  blockExplorerApiKey?: string\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"providemultisendcontext\"\n    }}>{`ProvideMultiSendContext`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`let props: {\n  network: string\n  safeAddress: string\n  blockExplorerApiKey?: string\n  lazy?: boolean\n}\n;<ProvideMultiSendContext {...props}>\n  {/* provides the passed props values to the hooks used in children */}\n</ProvideMultiSendContext>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usemultisendcontext\"\n    }}>{`useMultiSendContext`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`useMultiSendContext(): { network: string, safeAddress: string }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"createtransaction\"\n    }}>{`createTransaction`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`createTransaction(type: TransactionType, id?: string): TransactionInput\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"isvalid\"\n    }}>{`isValid`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`isValid(transactionInput: TransactionInput): boolean\n`}</code></pre>\n    <p>{`Returns whether the provided transaction input can be encoded into a meta transaction without errors and has a valid `}<inlineCode parentName=\"p\">{`to`}</inlineCode>{` address.`}</p>\n    <h2 {...{\n      \"id\": \"encodesingle\"\n    }}>{`encodeSingle`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`encodeSingle(transactionInput: TransactionInput): MetaTransaction\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"encodemulti\"\n    }}>{`encodeMulti`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`encodeMulti(metaTransaction: MetaTransaction): MetaTransaction\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}