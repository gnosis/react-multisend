interface BaseInput {
  name: string
}

interface BoolInput extends BaseInput {
  type: 'bool'
  baseType: 'bool'
  value: boolean
}

interface AddressInput extends BaseInput {
  type: 'address'
  baseType: 'address'
  value: string
}

type Numbers1Through32 =
  | '1'
  | '2'
  | '3'
  | '4'
  | '5'
  | '6'
  | '7'
  | '8'
  | '9'
  | '10'
  | '11'
  | '12'
  | '13'
  | '14'
  | '15'
  | '16'
  | '17'
  | '18'
  | '19'
  | '20'
  | '21'
  | '22'
  | '23'
  | '24'
  | '25'
  | '26'
  | '27'
  | '28'
  | '29'
  | '30'
  | '31'
  | '32'
type Numbers1Through80 =
  | '1'
  | '2'
  | '3'
  | '4'
  | '5'
  | '6'
  | '7'
  | '8'
  | '9'
  | '10'
  | '11'
  | '12'
  | '13'
  | '14'
  | '15'
  | '16'
  | '17'
  | '18'
  | '19'
  | '20'
  | '21'
  | '22'
  | '23'
  | '24'
  | '25'
  | '26'
  | '27'
  | '28'
  | '29'
  | '30'
  | '31'
  | '32'
  | '33'
  | '34'
  | '35'
  | '36'
  | '37'
  | '38'
  | '39'
  | '40'
  | '41'
  | '42'
  | '43'
  | '44'
  | '45'
  | '46'
  | '47'
  | '48'
  | '49'
  | '50'
  | '51'
  | '52'
  | '53'
  | '54'
  | '55'
  | '56'
  | '57'
  | '58'
  | '59'
  | '60'
  | '61'
  | '62'
  | '63'
  | '64'
  | '65'
  | '66'
  | '67'
  | '68'
  | '69'
  | '70'
  | '71'
  | '72'
  | '73'
  | '74'
  | '75'
  | '76'
  | '77'
  | '78'
  | '79'
  | '80'
type MultiplesOf8To256 =
  | '8'
  | '16'
  | '24'
  | '32'
  | '40'
  | '48'
  | '56'
  | '64'
  | '72'
  | '80'
  | '88'
  | '96'
  | '104'
  | '112'
  | '120'
  | '128'
  | '136'
  | '144'
  | '152'
  | '160'
  | '168'
  | '176'
  | '184'
  | '192'
  | '200'
  | '208'
  | '216'
  | '224'
  | '232'
  | '240'
  | '248'
  | '256'

type AbiStringTypes = 'string' | 'bytes' | `bytes${Numbers1Through32}`
interface StringInput extends BaseInput {
  type: AbiStringTypes
  baseType: AbiStringTypes
  value: string
}

type AbiNumberTypes =
  | 'int'
  | 'uint'
  | `int${MultiplesOf8To256}`
  | `uint${MultiplesOf8To256}`
  | 'fixed'
  | 'ufixed'
  | `fixed${MultiplesOf8To256}x${Numbers1Through80}`
  | `ufixed${MultiplesOf8To256}x${Numbers1Through80}`
interface NumberInput extends BaseInput {
  type: AbiNumberTypes
  baseType: AbiNumberTypes
  value: string
}

export type Input = BoolInput | AddressInput | StringInput | NumberInput
